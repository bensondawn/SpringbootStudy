spring:
  cloud:
    config:
      # 服务配置中心设置的路径下的分支目录
      name: iot
      profile: dev
      label: master
      # uri: http://localhost:9600
      # 同uri效果一样。
      discovery:
        enabled: true
        service-id: config-server

#eureka:
#  client:
#    # 是否将自己注册到Eureka Server上，默认为true
#    register-with-eureka: false
#    # 是否从Eureka Server上获取注册信息，默认为true
#    fetch-registry: false

eureka:
  instance:
    hostname: localhost
    # 表示eureka client间隔多久去拉取服务注册信息，默认为30秒，如果要迅速获取服务注册状态，可以缩小该值
    lease-renewal-interval-in-seconds: 5
    # 表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。
    # 默认为90秒
    # 如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
    # 如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
    # 该值至少应该大于 leaseRenewalIntervalInSeconds
    lease-expiration-duration-in-seconds: 10
    # 通过ip和端口注册
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
  client:
    serviceUrl:
      defaultZone: http://admin:admin6@eureka-server1:9100/eureka/,http://admin:admin6@eureka-server2:9200/eureka/,http://admin:admin6@eureka-server3:9300/eureka/