<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true">
    <contextName>logback</contextName>
    <property name="log.path" value="logs" />

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!--格式-->
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
        <!--此处记录debug级别的，如果根节点root的级别高于debug，则debug信息会被过滤掉-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
        </filter>
    </appender>

    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/order-server-file.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/log-%d{yyyy-MM-dd}.log</fileNamePattern>
        </rollingPolicy>
        <!--格式-->
        <encoder>
            <pattern>%date %level [%thread] %logger{36} [%file : %line] %msg%n</pattern>
        </encoder>
        <!-- 此日志文件只记录INFO级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
        </filter>
    </appender>

    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/order-server-error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/error-%d{yyyy-MM-dd}.log</fileNamePattern>
        </rollingPolicy>
        <!--格式-->
        <encoder>
            <pattern>%date %level [%thread] %logger{36} [%file : %line] %msg%n</pattern>
        </encoder>
        <!-- 此日志文件只记录ERROR级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!--TRACE < DEBUG < INFO < WARN < ERROR-->
    <!--<logger>用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<appender>。-->
    <!--<logger>仅有一个name属性，一个可选的level和一个可选的addtivity属性，该属性默认为true，代表是否向上级logger传递打印信息。-->
    <!--logger的根节点是root，如果logger中没有指定level，会默认继承root的level。-->
    <!--logger中的addtivity属性为默认的true时，该logger的包的日志会向父级logger传递。-->
    <!--
    <logger name="org.mybatis" level="ERROR" />
    <logger name="org.springframework" level="ERROR" />
    <logger name="org.linlinjava.litemall.core" level="ERROR" />
    <logger name="org.linlinjava.litemall.db" level="ERROR" />
    <logger name="org.linlinjava.litemall.admin" level="DEBUG" />
    <logger name="org.linlinjava.litemall.wx" level="DEBUG" />
    <logger name="org.linlinjava.litemall" level="DEBUG" />
    -->

    <!--root也是<logger>元素，但是它是根logger。只有一个level属性-->
    <!--logger中如果有level，则会覆盖root中的level，如果没有，则会继承root的level。-->
    <!--日志传输流程，logger中的包的日志先根据addtivity属性决定是否需要向上传递，还是在自身的appender中打印；-->
    <!--如果为默认的true，则日志会向上级传递，即传递给root，然后root把收到的日志给下面的appender，-->
    <!--appender根据自己的level级别，决定输出哪些日志。-->
    <root level="INFO">
        <appender-ref ref="console" />
        <appender-ref ref="file" />
        <appender-ref ref="error" />
    </root>
</configuration>